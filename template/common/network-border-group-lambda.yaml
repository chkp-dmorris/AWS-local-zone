AWSTemplateFormatVersion: 2010-09-09
Description: Lambda function to determine Network Border Group for Local Zone and Wavelength Zone support (20250812)

Parameters:
  SubnetId:
    Description: The subnet ID to determine the network border group for
    Type: AWS::EC2::Subnet::Id
    MinLength: 1

Resources:
  GetNetworkBorderGroupFunction:
    Type: AWS::Lambda::Function
    Properties:
      Runtime: python3.11
      Handler: index.handler
      Role: !GetAtt GetNetworkBorderGroupRole.Arn
      Timeout: 30
      Code:
        ZipFile: |
          import boto3, json
          import cfnresponse

          def handler(event, context):
              try:
                  print(f"Event: {json.dumps(event)}")
                  if event.get('RequestType') == 'Delete':
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                      return

                  subnet_id = event['ResourceProperties']['SubnetId']
                  ec2 = boto3.client('ec2')

                  # Get the subnet and its AZ
                  subnet = ec2.describe_subnets(SubnetIds=[subnet_id])['Subnets'][0]
                  az = subnet['AvailabilityZone']
                  print(f"Subnet {subnet_id} in AZ {az}")

                  # Get NetworkBorderGroup from the AZ description (authoritative source)
                  az_desc = ec2.describe_availability_zones(ZoneNames=[az])['AvailabilityZones'][0]
                  nbg = az_desc.get('NetworkBorderGroup', az)
                  print(f"Resolved NetworkBorderGroup: {nbg}")

                  cfnresponse.send(event, context, cfnresponse.SUCCESS, {'NetworkBorderGroup': nbg})

              except Exception as ex:
                  msg = f"Error determining NetworkBorderGroup: {str(ex)}"
                  print(msg)
                  cfnresponse.send(event, context, cfnresponse.FAILED, {'Error': msg})

  GetNetworkBorderGroupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: {Service: lambda.amazonaws.com}
            Action: sts:AssumeRole
      ManagedPolicyArns: [arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole]
      Policies:
        - PolicyName: EC2ReadOnlyDescribeAZSubnet
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                  - ec2:DescribeAvailabilityZones
                Resource: '*'

  GetNetworkBorderGroup:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt GetNetworkBorderGroupFunction.Arn
      SubnetId: !Ref SubnetId

Outputs:
  NetworkBorderGroup:
    Description: The network border group derived from the subnet's availability zone
    Value: !GetAtt GetNetworkBorderGroup.NetworkBorderGroup
    Export:
      Name: !Sub "${AWS::StackName}-NetworkBorderGroup"
  
  LambdaFunctionArn:
    Description: ARN of the Lambda function for network border group detection
    Value: !GetAtt GetNetworkBorderGroupFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-LambdaArn"
